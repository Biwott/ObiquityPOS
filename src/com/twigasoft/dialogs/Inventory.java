/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.twigasoft.dialogs;

import com.twigasoft.main.MainApp;
import com.twigasoft.search.InventorySearch;
import com.twigasoft.settings.StartDay;
import com.twigasoft.utils.DataUtils;
import com.twigasoft.utils.Database;
import com.twigasoft.utils.FormUtils;
import com.twigasoft.utils.NumUtils;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Victor
 */
public class Inventory extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    MainApp app;
    private final static Logger logger = Logger.getLogger(Inventory.class.getName());

    public Inventory(MainApp app, boolean modal) {
        super(app, modal);
        this.app = app;
        initComponents();
        //Custom Methods
        fillComboType();
        fillComboCategory();
        fillComboDepartment();
        fillComboSupplier();
        fillComboTax();
        fillComboWarehouse();
        txtName.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSaveNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtImg = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTradePrice = new javax.swing.JTextField();
        cmbDep = new javax.swing.JComboBox();
        txtMarkup = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtReOrderQty = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtTradeQty = new javax.swing.JTextField();
        txtSupplyPrice = new javax.swing.JTextField();
        cmbTAx = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        lblError = new javax.swing.JLabel();
        lblSuccess = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtSupplyQty = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbSupplier = new javax.swing.JComboBox();
        cmbType = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cmbWarehouse = new javax.swing.JComboBox();
        txtBarcode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        txtSize = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    getBackground().brighter(), 0, getHeight(),
                    getBackground().darker());
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight()/2);

            }
        };
        txtSearch = new InventorySearch();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fill Inventory");
        setMinimumSize(null);
        setResizable(false);

        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(137, 140, 149)));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setText("<html>CANCEL<p align=center>(ESC)</p></html>");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSaveNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSaveNew.setText("<html>SAVE & NEW<p align=center>(F3)</p></htnl>");
        btnSaveNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveNewMouseReleased(evt);
            }
        });
        btnSaveNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSave.setText("<html>SAVE<p align=center>(F4)</p></html>");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClear.setText("<html>CLEAR<p align=center>(F5)</p></html>");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSaveNew, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSave)
                    .addComponent(btnSaveNew, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(137, 140, 149)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Supplier");

        txtImg.setEditable(false);
        txtImg.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtImg.setToolTipText("Click Button to browse image of the product");
        txtImg.setFocusable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Category");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("%Profit");

        txtTradePrice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtTradePrice.setToolTipText("Unit Cost of Sale(Selling Price)");
        txtTradePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTradePriceActionPerformed(evt);
            }
        });
        txtTradePrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTradePriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTradePriceFocusLost(evt);
            }
        });
        txtTradePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTradePriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTradePriceKeyTyped(evt);
            }
        });

        cmbDep.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbDep.setForeground(new java.awt.Color(0, 51, 51));
        cmbDep.setToolTipText("Department Grouping of the Product");
        cmbDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepActionPerformed(evt);
            }
        });

        txtMarkup.setBackground(new java.awt.Color(240, 240, 240));
        txtMarkup.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtMarkup.setToolTipText("Percentage Markup");
        txtMarkup.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMarkupFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMarkupFocusLost(evt);
            }
        });
        txtMarkup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMarkupKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMarkupKeyTyped(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Store Loc.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Item Size");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 0));
        jLabel29.setText("*");

        txtReOrderQty.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtReOrderQty.setToolTipText("Restock or Reshelf Quantity");
        txtReOrderQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtReOrderQtyKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Item Type");

        txtTradeQty.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtTradeQty.setToolTipText("Minimum Trading quantity");
        txtTradeQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTradeQtyActionPerformed(evt);
            }
        });
        txtTradeQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTradeQtyKeyTyped(evt);
            }
        });

        txtSupplyPrice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtSupplyPrice.setToolTipText("Unit Cost of Supply(Buying Price)");
        txtSupplyPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSupplyPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSupplyPriceFocusLost(evt);
            }
        });
        txtSupplyPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupplyPriceKeyTyped(evt);
            }
        });

        cmbTAx.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbTAx.setForeground(new java.awt.Color(0, 51, 51));
        cmbTAx.setToolTipText("Taxation rule of the product");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Notes");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Supply Price");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Department");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(FormUtils.txtAreaBorder());

        txtNotes.setBackground(new java.awt.Color(255, 255, 153));
        txtNotes.setColumns(20);
        txtNotes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNotes.setLineWrap(true);
        txtNotes.setRows(5);
        txtNotes.setTabSize(1);
        txtNotes.setToolTipText("Product Notes");
        txtNotes.setMargin(new java.awt.Insets(2,6, 2, 6));
        txtNotes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNotesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNotesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtNotes);
        txtNotes.setTabSize(1);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Applicable Tax");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Supplied Qty");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setLayout(new javax.swing.OverlayLayout(jPanel8));

        lblError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        jPanel8.add(lblError);

        lblSuccess.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSuccess.setForeground(new java.awt.Color(0, 153, 51));
        jPanel8.add(lblSuccess);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Trade Price");

        cmbCategory.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbCategory.setForeground(new java.awt.Color(0, 51, 51));
        cmbCategory.setToolTipText("Item category grouping");
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Image Icon");

        txtName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtName.setToolTipText("Enter Product Name ");
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 0, 0));
        jLabel30.setText("*");

        txtSupplyQty.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtSupplyQty.setToolTipText("Incoming Stock Quantity");
        txtSupplyQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupplyQtyActionPerformed(evt);
            }
        });
        txtSupplyQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSupplyQtyKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Re-Order Qty");

        cmbSupplier.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbSupplier.setForeground(new java.awt.Color(0, 51, 51));
        cmbSupplier.setToolTipText("Supplier of the Product");
        cmbSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierActionPerformed(evt);
            }
        });

        cmbType.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbType.setForeground(new java.awt.Color(0, 51, 51));
        cmbType.setToolTipText("Product Type, e.g. Service, inventory e.t.c");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("*");

        cmbWarehouse.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cmbWarehouse.setForeground(new java.awt.Color(0, 51, 51));
        cmbWarehouse.setToolTipText("Storage Location for the item");

        txtBarcode.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtBarcode.setToolTipText("Universal Product Code (UPC)");
        txtBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarcodeActionPerformed(evt);
            }
        });
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Barcode No.");

        jButton6.setText("...");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        txtSize.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtSize.setToolTipText("Measure attribute of the product");
        txtSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSizeActionPerformed(evt);
            }
        });
        txtSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSizeKeyTyped(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("Trade Qty");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 0, 0));
        jLabel31.setText("*");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel27)
                    .addComponent(jLabel13)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDep, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbTAx, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel11Layout.createSequentialGroup()
                                .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel24)
                            .addComponent(jLabel4)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbSupplier, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cmbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSupplyQty, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMarkup, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel5)
                            .addComponent(jLabel33))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(txtImg)
                                .addGap(0, 0, 0)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel11Layout.createSequentialGroup()
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTradePrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSupplyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel28)
                                            .addComponent(jLabel30)))
                                    .addComponent(txtTradeQty, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel8))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtReOrderQty, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDep, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTAx, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cmbWarehouse, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(txtSupplyQty, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel5)
                    .addComponent(txtSupplyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTradePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMarkup, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtReOrderQty, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTradeQty, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtImg, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel14))
                            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton6)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(162, 162, 162))
        );

        //Display the First Recordin the Text Fields

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 401, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(1, 119, 164));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("  Add Stock");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void cmbSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupplierActionPerformed

    private void cmbDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDepActionPerformed

    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBarcodeActionPerformed

    private void txtTradePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTradePriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTradePriceActionPerformed

    private void btnSaveNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewActionPerformed
        Connection conn = null;
        PreparedStatement pst = null;
        String sql = "INSERT INTO tbl_inventory(item_type, upc, cat_id, supplier_id,"
                + " dep_id, supply_qty, item_name, supply_price, tax_id,  trade_price,"
                + " reorder_qty, store_loc_id, notes, created_by, time_created, image, size )"
                + " VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

        if (validateFields()) {
            try {
                conn = Database.getConnection();
                pst = conn.prepareStatement(sql);
                pst.setInt(1, DataUtils.getComboValue(cmbType, "tbl_item_type"));
                pst.setInt(2, FormUtils.getTextValue(txtBarcode));
                pst.setInt(3, DataUtils.getComboValue(cmbCategory, "tbl_category"));
                pst.setInt(4, DataUtils.getComboValue(cmbSupplier, "tbl_supplier"));
                pst.setInt(5, DataUtils.getComboValue(cmbDep, "tbl_departments"));
                pst.setInt(6, FormUtils.getTextValue(txtSupplyQty));
                pst.setString(7, txtName.getText());
                pst.setInt(8, FormUtils.getTextValue(txtSupplyPrice));
                pst.setInt(9, DataUtils.getComboValue(cmbTAx, "tbl_tax"));
                pst.setInt(10, FormUtils.getTextValue(txtTradePrice));
                pst.setInt(11, FormUtils.getTextValue(txtReOrderQty));
                pst.setInt(12, DataUtils.getComboValue(cmbWarehouse, "tbl_store_locations"));
                pst.setString(13, txtNotes.getText());
                pst.setInt(14, app.getEmpId());
                pst.setObject(15, new Timestamp(new Date().getTime()));
                pst.setBlob(16, FormUtils.getBlobValue(txtImg, getClass()));
                pst.setString(17, txtSize.getText());
                pst.executeUpdate();
                clearTextFields();
                txtName.requestFocus();
                FormUtils.showSuccessMessage(lblSuccess, "Succesfully Added!");

            } catch (SQLException | HeadlessException | FileNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
                logger.log(Level.SEVERE, null, e);
            } finally {
                try {
                    pst.close();
                    conn.close();

                } catch (SQLException ex) {
                    Logger.getLogger(StartDay.class.getName()).log(Level.WARNING, null, ex);
                }
            }
        }

    }//GEN-LAST:event_btnSaveNewActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            chooser.showOpenDialog(this);
            txtImg.setText(chooser.getSelectedFile().getAbsolutePath());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearTextFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveNewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveNewMouseReleased
        if (validateFields()) {
            //   clearTextFields();
        }
    }//GEN-LAST:event_btnSaveNewMouseReleased

    private void txtTradePriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTradePriceKeyReleased
        if (txtSupplyPrice.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtSupplyPrice, "* Supply Price is required!");
        } else {
            if (!txtSupplyPrice.getText().equals("") && !txtTradePrice.getText().equals("")) {
                if (NumUtils.removeSignInt(txtTradePrice.getText(), ',') >= NumUtils.removeSignInt(txtSupplyPrice.getText(), ',')) {
                    int supplyPrice = NumUtils.removeSignInt(txtSupplyPrice.getText(), ',');
                    int tradePrice = NumUtils.removeSignInt(txtTradePrice.getText(), ',');
                    int markup = ((tradePrice - supplyPrice) * 100) / supplyPrice;
                    txtMarkup.setText(NumUtils.appendPerc((double) markup));
                } else {
                    txtMarkup.setText("");
                }
            } else {
                txtMarkup.setText("");
            }

        }
    }//GEN-LAST:event_txtTradePriceKeyReleased

    private void txtNotesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNotesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            btnSaveNew.requestFocus();
        }
    }//GEN-LAST:event_txtNotesKeyPressed

    private void txtTradePriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTradePriceFocusGained
        if (txtSupplyPrice.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtSupplyPrice, "* Supply Price Required!");
        }
        if (!txtTradePrice.getText().equals("")) {
            txtTradePrice.setText(Integer.toString(NumUtils.removeSignInt(txtTradePrice.getText(), ',')));
        }
    }//GEN-LAST:event_txtTradePriceFocusGained

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped


    }//GEN-LAST:event_txtNameKeyTyped

    private void txtBarcodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtBarcodeKeyTyped

    private void txtSupplyPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplyPriceKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtSupplyPriceKeyTyped

    private void txtTradePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTradePriceKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtTradePriceKeyTyped

    private void txtMarkupKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarkupKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtMarkupKeyTyped

    private void txtTradeQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTradeQtyKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtTradeQtyKeyTyped

    private void txtReOrderQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReOrderQtyKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtReOrderQtyKeyTyped

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        lblError.setText("");
        lblSuccess.setText("");
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtSupplyQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupplyQtyKeyTyped
        FormUtils.validateInteger(evt);
        lblError.setText("");
    }//GEN-LAST:event_txtSupplyQtyKeyTyped

    private void txtSupplyQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupplyQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplyQtyActionPerformed

    private void txtMarkupFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarkupFocusGained
        if (!txtMarkup.getText().equals("")) {
            txtMarkup.setText(Integer.toString(NumUtils.removeSignInt(txtMarkup.getText(), '%')));
        }
    }//GEN-LAST:event_txtMarkupFocusGained

    private void txtMarkupFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMarkupFocusLost
        if (!txtMarkup.getText().equals("")) {
            txtMarkup.setText(NumUtils.appendPerc(txtMarkup.getText()));
        }
    }//GEN-LAST:event_txtMarkupFocusLost

    private void txtMarkupKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarkupKeyReleased
        if (txtSupplyPrice.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtSupplyPrice, "* Supply Price Required!");
        } else if (!txtMarkup.getText().equals("")) {
            int supplyPrice = NumUtils.removeSignInt(txtSupplyPrice.getText(), ',');
            int sellPrice = 0;
            int markup = Integer.parseInt(txtMarkup.getText());
            sellPrice = ((markup + 100) * supplyPrice) / 100;
            txtTradePrice.setText(NumUtils.formatAmount(Integer.toString(sellPrice)));
        } else {
            txtTradePrice.setText("");
        }
    }//GEN-LAST:event_txtMarkupKeyReleased

    private void txtTradePriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTradePriceFocusLost
        if (!txtTradePrice.getText().equals("")) {
            txtTradePrice.setText(NumUtils.formatAmount(txtTradePrice.getText()));
        }
    }//GEN-LAST:event_txtTradePriceFocusLost

    private void txtSupplyPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupplyPriceFocusGained
        if (!txtSupplyPrice.getText().equals("")) {
            txtSupplyPrice.setText(Integer.toString(NumUtils.removeSignInt(txtSupplyPrice.getText(), ',')));
        }
    }//GEN-LAST:event_txtSupplyPriceFocusGained

    private void txtSupplyPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSupplyPriceFocusLost
        if (!txtSupplyPrice.getText().equals("")) {
            txtSupplyPrice.setText(NumUtils.formatAmount(txtSupplyPrice.getText()));
        }
    }//GEN-LAST:event_txtSupplyPriceFocusLost

    private void txtTradeQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTradeQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTradeQtyActionPerformed

    private void txtSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSizeActionPerformed

    private void txtSizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSizeKeyTyped

    private void txtNotesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNotesKeyTyped

    }//GEN-LAST:event_txtNotesKeyTyped
    private final void fillComboType() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_item_type";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbType.addItem(rs.getString(1));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        } finally {
            try {
                pst.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private final void fillComboCategory() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_category";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbCategory.addItem(rs.getString(1));
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                pst.close();
                rs.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private final void fillComboDepartment() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_departments";
        try {
            conn = Database.getConnection();
            pst = conn.prepareCall(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbDep.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private final void fillComboWarehouse() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_store_locations";
        try {
            conn = Database.getConnection();
            pst = conn.prepareCall(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbWarehouse.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void fillComboSupplier() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_supplier";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbSupplier.addItem(rs.getString(1));
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private final void fillComboTax() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_tax";

        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbTAx.addItem(rs.getString(1));
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();

            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    public boolean validateFields() {
        if (txtName.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtName, "* Product Name is required!");
            return false;
        } else if (txtBarcode.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtBarcode, "* Barcode No. Required!");
            return false;
        } else if (txtSupplyPrice.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtSupplyPrice, "* Supply Price is Required");
            return false;
        }
        if (txtTradePrice.getText().equals("")) {
            FormUtils.blinkErrorMesage(lblError, txtTradePrice, "* Trade Price Required!");
            return false;
        } else {
            lblError.setText("");
            return true;
        }
    }

    public void clearTextFields() {
        txtName.setText("");
        txtBarcode.setText("");
        txtTradeQty.setText("");
        txtMarkup.setText("");
        txtTradePrice.setText("");
        txtTradeQty.setText("");
        txtSupplyPrice.setText("");
        txtSupplyQty.setText("");
        txtReOrderQty.setText("");
        txtNotes.setText("");
        txtImg.setText("");
        txtSize.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Inventory dialog = new Inventory(new MainApp(1), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveNew;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JComboBox cmbDep;
    private javax.swing.JComboBox cmbSupplier;
    private javax.swing.JComboBox cmbTAx;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JComboBox cmbWarehouse;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblSuccess;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtImg;
    private javax.swing.JTextField txtMarkup;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextField txtReOrderQty;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSize;
    private javax.swing.JTextField txtSupplyPrice;
    private javax.swing.JTextField txtSupplyQty;
    private javax.swing.JTextField txtTradePrice;
    private javax.swing.JTextField txtTradeQty;
    // End of variables declaration//GEN-END:variables
}
