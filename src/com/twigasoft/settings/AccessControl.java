/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.twigasoft.settings;

import com.twigasoft.dialogs.Inventory;
import com.twigasoft.main.MainApp;
import com.twigasoft.renderers.UACEditor;
import com.twigasoft.renderers.UACRenderer;
import com.twigasoft.utils.DataUtils;
import com.twigasoft.utils.Database;
import com.twigasoft.utils.FormUtils;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Victor
 */
public class AccessControl extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    String columns[] = {"name"};
    String table = "tbl_auth_role_items";
    DefaultTableModel model;
    ItemListener listener;

    public AccessControl(MainApp parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        fillComboGroup();
        model = (DefaultTableModel) jTable1.getModel();
        model.addColumn("Auth Items");
        getAuthItemNames();
        getAuthLevels();
        listener = new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    System.out.println("State Changed!");
                }
            }
        };

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbGroupItems = new javax.swing.JComboBox();
        btnNewGroup = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column){
                if(column==0||column==getColumnCount()-1){
                    return false;
                }
                else {
                    return true;
                }
            }
            public Component prepareRenderer(TableCellRenderer renderer, int row, int column)
            {
                Component returnComp=super.prepareRenderer(renderer, row, column);
                Color alternateColor=new Color(242,242,242);
                Color whiteColor=Color.WHITE;
                if(!returnComp.getBackground().equals(getSelectionBackground())){
                    Color bg=(row%2==0&&column!=getColumnCount()-1?alternateColor:whiteColor);
                    returnComp.setBackground(bg);
                    bg=null;
                }
                return returnComp;
            }

        };
        jPanel2 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblSuccess = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel(){
            @Override
            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    getBackground().brighter(), 0, getHeight(),
                    getBackground().darker());
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight()/2);

            }
        };
        jLabel26 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Grouping Menu");

        cmbGroupItems.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbGroupItems.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Items" }));
        cmbGroupItems.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbGroupItemsPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btnNewGroup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNewGroup.setText("New Access Group");
        btnNewGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGroupActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Remove Group");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbGroupItems, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(37, 37, 37)
                .addComponent(btnNewGroup)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbGroupItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setRowHeight(23);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("Save Changes");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        lblSuccess.setForeground(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel10.setBackground(new java.awt.Color(1, 119, 164));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("User Access Control");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnNewGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGroupActionPerformed
        String roleName = JOptionPane.showInputDialog(this, "Enter Role Name:", "Enter Name", JOptionPane.PLAIN_MESSAGE);
        if (roleName != null && !roleName.equals("") && jTable1.getColumnCount() < 8) {
            model.setColumnCount(jTable1.getColumnCount() - 1);
            model.addColumn(roleName);
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                jTable1.setValueAt(0, i, jTable1.getColumnCount() - 1);
            }
            remodifyTable();
            btnSave.setEnabled(true);
        } else {
            try {
                if (roleName.equals("")) {
                    JOptionPane.showMessageDialog(this, "Name Cannot be Empty!", "Empty Role Name!", JOptionPane.OK_OPTION);
                } else if (jTable1.getColumnCount() > 7) {
                    JOptionPane.showMessageDialog(this, "Maximum Allowed Number of \nRole Levels Reached!", "Not Allowed!", JOptionPane.OK_OPTION);
                }
            } catch (NullPointerException e) {
            }
        }

    }//GEN-LAST:event_btnNewGroupActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        for (int i = 1; i < jTable1.getColumnCount() - 1; i++) {
            String columnName = jTable1.getColumnName(i);
            if (DataUtils.checkExistance("tbl_auth_role_levels", "name", columnName)) {
                int levelId = DataUtils.getTableId("tbl_auth_role_levels", "name", columnName);
                System.err.println(columnName + "--" + levelId);
                for (int j = 0; j < jTable1.getRowCount(); j++) {
                    int value = Integer.parseInt(jTable1.getValueAt(j, i).toString());
                    int itemId = DataUtils.getTableId("tbl_auth_role_items", "name", jTable1.getValueAt(j, 0).toString());
                    updateRoleLevel(value, itemId, levelId);
                    FormUtils.showSuccessMessage(lblSuccess, "Successfully Updated!");
                }
            } else {
                if (DataUtils.addTableData("tbl_auth_role_levels", columnName)) {

                    int levelId = DataUtils.getTableId("tbl_auth_role_levels", "name", columnName);
                    for (int j = 0; j < jTable1.getRowCount(); j++) {
                        int value = Integer.parseInt(jTable1.getValueAt(j, i).toString());
                        int itemId = DataUtils.getTableId("tbl_auth_role_items", "name", jTable1.getValueAt(j, 0).toString());
                        insertRoleLevel(itemId, levelId, value);
                    }
                    JOptionPane.showMessageDialog(this, "Successfully Added '" + columnName + "' Role Level!", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
        JOptionPane.showMessageDialog(this, "You might need to Restart the\n Application to effect changes!");
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        btnSave.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void cmbGroupItemsPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbGroupItemsPopupMenuWillBecomeInvisible
        System.err.println(evt.getSource().equals(cmbGroupItems));
        cmbGroupItems.addItemListener(listener);
        cmbGroupItems.addItemListener(null);
    }//GEN-LAST:event_cmbGroupItemsPopupMenuWillBecomeInvisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RemoveGroup dialog = new RemoveGroup(null, true);
        dialog.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void fillComboGroup() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT group_name FROM tbl_auth_role_groups";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                cmbGroupItems.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                pst.close();
                rs.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Inventory.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public final boolean isVisble() {
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(AccessControl.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cmbGroupItems.isPopupVisible();
    }

    private void getAuthLevels() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT DISTINCT level_id FROM tbl_auth_role_assignments";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                int levelId = rs.getInt(1);
                String column = DataUtils.getFieldValue("name", "tbl_auth_role_levels", levelId);
                model.addColumn(column);
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    int roleId = DataUtils.getTableId("tbl_auth_role_items", "name", jTable1.getValueAt(i, 0).toString());
                    int value = getAuthValues(roleId, levelId);
                    jTable1.setValueAt(value, i, jTable1.getColumnCount() - 1);
                }
            }
            remodifyTable();
        } catch (SQLException ex) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AccessControl.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void getAuthItemNames() {
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT name FROM tbl_auth_role_items";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while (rs.next()) {
                ((DefaultTableModel) jTable1.getModel()).insertRow(jTable1.getRowCount(), new Object[]{rs.getObject(1)});
            }
        } catch (SQLException e) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                rs.close();
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AccessControl.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private int getAuthValues(int itemId, int levelId) {
        int value = -1;
        Connection conn = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        String sql = "SELECT value FROM tbl_auth_role_assignments WHERE item_id=? AND level_id=?";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            pst.setInt(1, itemId);
            pst.setInt(2, levelId);
            rs = pst.executeQuery();
            while (rs.next()) {
                value = rs.getInt(1);
            }
        } catch (SQLException e) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return value;
    }

    private void updateRoleLevel(int value, int itemId, int levelId) {
        Connection conn = null;
        PreparedStatement pst = null;
        String sql = "UPDATE tbl_auth_role_assignments SET value = ? WHERE item_id = ? AND level_id=?;";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            pst.setInt(1, value);
            pst.setInt(2, itemId);
            pst.setInt(3, levelId);
            pst.executeUpdate();
        } catch (SQLException e) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void insertRoleLevel(int itemId, int levelId, int value) {
        Connection conn = null;
        PreparedStatement pst = null;
        String sql = "INSERT INTO tbl_auth_role_assignments(item_id, level_id, value) VALUES(?,?,?)";
        try {
            conn = Database.getConnection();
            pst = conn.prepareStatement(sql);
            pst.setInt(1, itemId);
            pst.setInt(2, levelId);
            pst.setInt(3, value);
            pst.executeUpdate();
        } catch (SQLException e) {
            Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                pst.close();
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataUtils.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void remodifyTable() {
        model.addColumn("");
        int colCount = jTable1.getColumnCount();
        double[] widths = new double[colCount];
        double sum = 0;
        for (int i = 1; i < colCount - 1; i++) {
            jTable1.getColumnModel().getColumn(i).setCellEditor(new UACEditor());
            jTable1.getColumnModel().getColumn(i).setCellRenderer(new UACRenderer());
            widths[i] = 0.18;
            sum += 0.10;
        }
        widths[0] = 0.40;
        if (jTable1.getColumnCount() != 8) {
            widths[colCount - 1] = 1.0 - (0.25 + sum);
        } else {
            widths[colCount - 1] = 0.0;
        }
        FormUtils.setWidthAsPercentages(jTable1, widths);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccessControl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                AccessControl dialog = new AccessControl(new MainApp(0), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNewGroup;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbGroupItems;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblSuccess;
    // End of variables declaration//GEN-END:variables
}
